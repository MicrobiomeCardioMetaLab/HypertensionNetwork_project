###### Hypertension Network ######
## 01. Construct microbial co-abundance networks
data   #genus count data
source("./cclasso.R")
library(reshape2)
ccl_count =cclasso(x = data, counts = T, n_boot=100)
ccl_cor =ccl_count$cor_w
ccl_cor[!lower.tri(ccl_cor, diag = F)] =NA 
ccl_cor =data.frame(cbind(rownames(ccl_cor),ccl_cor),row.names = NULL,check.names = F)
colnames(ccl_cor)[1] ="genus_1" 
ccl_cor =melt(ccl_cor,id="genus_1",value.name = "correlation",variable.name = "genus_2")
ccl_cor =ccl_cor[!is.na(ccl_cor[,3]),]
cor=ccl_cor


## 02. Random meta-analysis of networks
library(meta)
cor  #co-abundance correlations of 14regions
n  #sample sizes
meta =metacor(cor,n,sm="ZCOR")
TE =meta$TE.random
seTE =meta$seTE.random
pval =meta$pval.random
fdr =p.adjust(pval,method = "BH")


## 03. Heterogeneity analysis 
#between two groups
library(meta)
TE =c(TE_cg,TE_ht)   #cg refers to non-hypertension, ht refers to hypertension
seTE =c(seTE_cg,seTE_ht) 
meta =metagen(TE,seTE)
hetero_p =meta$pval.Q
I^2=meta$I2
#across four grades
TE_htn1 <- 0.5*log((1+cor_htn1)/(1-cor_htn1))  #Fisher's Z transformation, cor_htn1 is the correlation calculated by CCLasso
seTE_htn1 <- 1/sqrt(n1-3)
#htn2,htn3 are similar
TE=c(TE_cg,TE_htn1,TE_htn2,TE_htn3) 
seTE=c(seTE_cg,seTE_htn1,seTE_htn2,seTE_htn3)
meta=metagen(TE,seTE)
hetero_p=meta$pval.Q
I^2=meta$I2


# 04. Difference analysis in the abundance level
data  #relative abundance after correcting
#wilcoxon test between two groups
p_wilcoxon=wilcox.test(genus(or path) ~ group, data)$p.value
#Kruskal-Wallis test across four grades
p_kwtest=kruskal.test(genus(or path) ~ grades, data)$p.value


# 05. Extra variances estimation
var_ind =summary(lm(path~genus_1+genus_2))$r.squared  #path,genus_1,genus_2 are abundance data
p_ind =glance(summary(lm(path~genus_1+genus_2)))$p.value
var_int =summary(lm(path~genus_1+genus_2+genus_1:genus_2))$r.squared
q_ind =p.adjust(p_ind,method = "BH")
var_delta =var_int-var_ind  #calculate separately for 4 hypertension grades
data=data.frame(scale(data.frame(group=c(0,1,2,3),delta=c(var_delta0,var_delta1,var_delta2,var_delta3))))
var_delta_r=cor.test(data$delta,data$group,method = "pearson")$estimate
var_delta_p=cor.test(data$delta,data$group,method = "pearson")$p.value


###### That's all. Thank u~ ######
