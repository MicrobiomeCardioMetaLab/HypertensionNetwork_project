###################### code of visualization ########################
######Figure2
###Figure2A.tSENE
data <- read.csv("genus_relative.csv",row.names = 1,check.names = F)
district <- read.csv("district.csv",check.names = F)
tsne_out <- Rtsne(data, perplexity = 30, theta = 0)
tsne_data <- data.frame(tsne_out$Y)
tsne_data$SampleID <- rownames(data)
tsne_data <- left_join(tsne_data,district,by="SampleID")

library(Rtsne)
library(ggplot2)
library(tidyverse)
library(gridExtra)
data <- tsne_data
col1 = colorRampPalette(c( "#F4A29A"  ,"#FAD5DF" ,"#ACBBE1", "#C6E6F5","#FCEFC6", "#F2F2F0"))(14)
ggplot(tsne_data, aes(tsne1,tsne2,color=group))+
  geom_point(alpha=1,size =0.05)+xlab(label = "t-SNE 1") + 
  ylab(label = "t-SNE 2")+theme_bw()+theme(panel.grid=element_blank())+
  theme(axis.ticks = element_blank())+
  scale_color_manual(values=col1)+
  theme(legend.position = "none") +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) 



###Figure2B.chain
ggplot(size, aes(x=reorder(Districts,-size), y=number)) +
  geom_point(aes(color=Group), size=1.5, stroke=0.5) +
  geom_line(aes(group=Districts), linetype=2, color="#F2F2F0") +
  scale_color_manual(values = c("#ACBBE1","#F4A29A")) +
  theme_bw() +
  theme_classic() +
  labs(x="Districts",y='Sample Size',title='') +
  theme(legend.position = c(0.85, 0.85))+ 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) 


###Figure2C.histogram
node <- read.csv("ht_node_phylum.csv",check.names = F)
level <- c("Firmicutes","Proteobacteria","Bacteroidetes","Actinobacteria","Other")
node$phylum <- factor(node$phylum,levels = level)
ggplot(node,aes(degree,fill=phylum))+
  geom_histogram()+
  theme_bw() +
  theme(panel.grid = element_blank()) +
  theme(legend.position = "none") +
  scale_fill_manual(values = c("#ACBBE1", "#C6E6F5",  "#FCEFC6",  "#FAD5DF" , "#F4A29A")) +
  labs(x="Number of co-abundances",y="Frequency of genera") +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) 



###Figure2D&3C.bar plot
node <- read.csv("ht_node_phylum.csv",check.names = F)
node <- arrange(node,-degree)
node <- arrange(node,id)
level <- c("Firmicutes","Proteobacteria","Bacteroidetes","Actinobacteria","Other")
node$phylum <- factor(node$phylum,levels = level)
ggplot(node, aes(y = degree, group=phylum, fill=phylum)) + 
  geom_bar(aes(x = reorder(node_name,id)), stat="identity",width=0.6)+
  theme_bw() +
  theme_classic() +
  labs(x="Genus",y="Number of co-abundances") +
  scale_fill_manual(values = c("#ACBBE1", "#C6E6F5",  "#FCEFC6",  "#FAD5DF" , "#F4A29A")) +
  theme(legend.position = c(0.85, 0.85))+ 
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())



###Figure.2E.donut
dat <- data.frame(group=c("Positive","Negative"),num=c(n1,n2))
dat$data="true"
dat1 <- dat  
dat1$data="blank"
dat1$num=0
dat <- rbind(dat1,dat)
myLabel = as.vector(dat$group)
percentage <- scales::percent(dat$num/sum(dat$num))
ggplot(dat, aes(x = data, y = num, fill = group,position = "fill",width=0.7)) +
  geom_bar(stat = "identity") +     
  coord_polar(theta = "y") + 
  theme_bw() + 
  labs(x = "", y = "", title = "") + 
  theme(axis.ticks = element_blank()) + 
  theme(legend.position = "none") + 
  theme(axis.text = element_blank()) +
  theme(panel.grid=element_blank()) +   
  theme(panel.border=element_blank()) + 
  scale_fill_manual(values = c("#ACBBE1","#F4A29A"))



######Figure3
###Figure3A.venn
cor <- list(Non_hypertensive=cor_cg$name,Hypertensive=cor_ht$name)
library(eulerr) 
plot(euler(cor),fills = list(fill=c("gray90","gray90"),alpha=0.5),
     quantities = list(col="black",cex=1),
     labels = list(col="black",font=3,cex=1),
     edges = list(col="gray70",size=5))



###Figure3B.mosaicplot
diff_cor <- read.csv("diff_cor.csv",check.names = F)
diff_cor$pattern <- factor(diff_cor$pattern)
diff_cor$group <- factor(diff_cor$group)
di <- xtabs( ~pattern+group,diff_cor) 
library(graphics)
mosaicplot( ~pattern+group,di, color = c("#ACBBE1","#FAD5DF","#C6E6F5"),main = '',cex.axis = 1,xlab = '', ylab = '')



###Figure3D&3E.scatter
cor$overlap[cor$hetero_p>0.05]="No_difference"
cor$overlap[cor$hetero_p<0.05]="With_difference"
ggplot(cor,aes(x=cor_ggmp,y=cor_rep, color=overlap)) +
  geom_point(shape=21,size=2,fill="#F2F2F0",stroke=0.7) + 
  scale_color_manual(values = c("#F4A29A","gray70")) +
  labs(x = 'Differential co-abundances in GGMP', y = 'Differential co-abundances in replication set',title = '') +
  geom_hline(yintercept=0,linetype=5,col="gray80") +  
  geom_vline(xintercept=0,linetype=5,col="gray80") +
  theme_bw() +
  theme_classic() +
  theme(panel.grid = element_blank()) + 
  theme(legend.position = c(0.85, 0.85))



######Figure4A tree--Graphlan
#data preparation
tree <- data.frame(paste(phylum,class,order,family,genus,sep = "."),check.names = F)
write.table(tree,"tree.txt", quote = F,col.names = F,row.names = F)

anno1 <- data.frame(stringsAsFactors = F)
v1 <- c("total_plotted_degrees","start_rotation",	"clade_separation",	"branch_bracket_depth", "branch_bracket_width",	"branch_thickness", "branch_color", "annotation_background_width", "annotation_background_separation", "clade_marker_size", "clade_marker_edge_width", "clade_marker_edge_color")
v2 <- c(360,-95,0.5,0.7,0.5,0.75,"#D3D3D3",0.60,-0.5,5,0.25,"#D3D3D3")
anno1 <- cbind(v1,v2)
write.table(anno1,"anno1.txt",sep = "\t", quote = F,col.names = F,row.names = F)

anno2 = data.frame(stringsAsFactors = F)
for (element in phylum)
{
  #marker color
  anno = data.frame(stringsAsFactors = F)
  anno[1,1] = element
  anno[1,2] = "clade_marker_color"

  #marker size
  anno[2,1] = element
  anno[2,2] = "clade_marker_size"

  #background color
  anno1[3,1] = element
  anno1[3,2] = "annotation_background_color" 
  
  #branch color
  anno1[4,1] = element
  anno1[4,2] = "branch_color"
  
  if (element %in% up_p)
  {
    anno1[1,3] = "#F6ACA7"   
  } else{
    anno1[1,3] = "white"
    anno1[4,3] = "gray"
  } 
  
  if (element %in% sta_p)
  {
    anno1[2,3] = 3   
  } else{
    anno1[2,3] = 3 
  } 
  
  if (element == "Firmicutes")
  {
    anno1[3,3] = "#9BB0DA"
  } else if (element == "Proteobacteria")
  {
    anno1[3,3] = "#B7E1F2"   
  } else if (element == "Bacteroidetes")
  {
    anno1[3,3] = "#FBEFB9"  
  } else if (element == "Actinobacteria")
  {
    anno1[3,3] = "#F8CED7"  
  } else {
    anno1[3,3] = "#F3918A"  
  }
  anno2 = rbind(anno2,anno1)
}
write.table(anno2,"anno2.txt",sep = "\t", quote = F,col.names = F,row.names = F)
#anno3--class anno4--order anno5--family anno6--genus

#run
graphlan_annotate.py --annot anno1.txt tree.txt tree.xml
graphlan.py tree.xml tree.pdf --dpi 300 --size 3.5



###Figure4B&4C.donut
di <- data.frame(type,number) #true data
di$group="true" 
di1 <- di
di1$group="blank"
di1$number=0 #fake data
di <- rbind(di1,di)
myLabel = as.vector(di$type)
di$percentage <- (di$n/sum(di$n))*100
ggplot(di, aes(x = group, y = number, fill = type,position = "fill",width=0.7)) +
  geom_bar(stat = "identity", alpha=0.7) +     
  coord_polar(theta = "y") + 
  theme_bw() + 
  labs(x = "", y = "", title = "") + 
  theme(axis.ticks = element_blank()) + 
  theme(axis.text = element_blank()) +
  theme(panel.grid=element_blank()) + 
  theme(panel.border=element_blank()) + 
  scale_fill_manual(values = c("#839DD1","#F1766D"))



######Figure5
###Figure5B.network
dc <- read.csv("diff_cor_fourgroup.csv",check.names = F)
node <- read.csv("node_fourgroup.csv",check.names = F)
node <- node[node$Degree>=4,]
dc <- dc[dc$genus_1%in%node$node_name | dc$genus_2%in%node$node_name,]
genus <- unique(c(as.character(dc$genus_1),as.character(dc$genus_2)))
library(igraph)
library(edgebundleR)
net <- graph_from_data_frame(d=dc1, vertices=genus, directed=T) 
eb=edgebundle(net,tension =0.9,fontsize = 7,nodesize = rep(3,length(genus)),padding=100)
eb$x$edges <- jsonlite::toJSON(get.data.frame(net,what="edges"))
eb <- htmlwidgets::onRender(
  eb,
  '
  function(el,x){
  // loop through each of our edges supplied
  //  and change the color
  x.edges.map(function(edge){
  var source = edge.from.split(".")[1];
  var target = edge.to.split(".")[1];
  d3.select(el).select(".link.source-" + source + ".target-" + target)
  .style("stroke",edge.color);
  })
  }
  '
)
saveEdgebundle(eb, "5B.html", selfcontained = TRUE)


###Figure5C.sankey
library(foreign)
library(ggplot2)
library(ggalluvial)
library(networkD3)
library(RColorBrewer)
library(knitr)
colnames(data) <- c("Genus 1","Genus 2","Correlation")
corLodes=to_lodes_form(data, axes = 1:ncol(data), id = "Cohort")
col = c(colorRampPalette(c("#F2F2F0","#F2F2F0","#FAD5DF","#F2F2F0","#FCEFC6","#F2F2F0","#C6E6F5"))(29),"#F4A29A","#ACBBE1")
ggplot(corLodes, aes(x = x, stratum = stratum, alluvium = Cohort,fill = stratum, label = stratum)) +
  scale_x_discrete(expand = c(0, 0)) + 
  geom_flow(width = 0.3,
            stat = "flow",
            aes.flow = "backward", 
            curve_type = "quintic",
            alpha = 0.75,
            color = 'white',
            linewidth = 0.1,
            show.legend = TRUE) + 
  geom_stratum(alpha = .95,width = 0.5, 
               linetype=1,size=0.4,fill="grey99", # 
               color = "gray70",inherit.aes=TRUE) + 
  scale_fill_manual(values = col) +
  geom_text(stat = "stratum", size = 2,color="black") +
  xlab("") + ylab("") + theme_bw() + 
  theme(axis.line = element_blank(),axis.ticks = element_blank(),axis.text.y = element_blank()) + 
  theme(panel.grid =element_blank()) + 
  theme(panel.border = element_blank()) + 
  ggtitle("") + guides(fill = "none") ;t



###Figure5D&6D.boxplot of abundance
data <- read.csv("abundance.csv",check.names = F)
bp <- read.csv("bp.csv",check.names = F)  
library(tidyverse)
library(reshape2)
data <- left_join(data,bp,by="SampleID")
data$Hypertension <- factor(data$Hypertension)
data <- melt(data,id=c("SampleID","Hypertension"),variable.name = "genus/pathway",value.name = "standard_abundance")
library(ggplot2)
library(ggbeeswarm)
ggplot(data, aes(x=Hypertension,y=standard_abundance)) +
  stat_boxplot(geom = "errorbar",width=0.5,size=0.1,color="gray70")+
  geom_point(aes(fill=Hypertension),position = 'jitter', color="#F2F2F0",shape = 21,size=0.8,stroke=0.1,show.legend = FALSE) + 
  geom_boxplot(notch=F, width=0.8, size=0.1, fill="white",outlier.shape = NA, position=position_dodge(0.7),color="gray70",alpha=0.1) +
  theme_bw() +
  theme_classic() +
  theme(panel.grid = element_blank()) +
  scale_fill_manual(values = c("#C6E6F5","#FCEFC6","#F7C2CD","#F4A29A")) +
  labs(x = 'Group', y = 'genus/pathway',title = '') +
  theme(legend.position = "none")




###Figure5E&6C.linear model
library(ggplot2)
library(gridExtra)
ggplot(data,aes(x=group, y=coefficient,color="#F4A29A")) + 
  geom_errorbar(aes(ymin=coefficient-se,ymax=coefficient+se),color="gray70",width=0,size=0.6) +
  geom_point(size=1.5,fill="#F4A29A",shape=21) +
  geom_smooth(method = "lm",size=0.8,linetype=2,se=F) +
  geom_ribbon(aes(ymin=coefficient-se,ymax=coefficient+se,fill="#F4A29A"),alpha=0.1, color = NA) +
  theme_bw() +
  theme(panel.grid = element_blank())+
  theme(legend.position = "none") +
  labs(x = "Grades of hypertension", y = "co-abun", title = "") 



######Figure6
###Figure6A.bubble plot
path <- read.csv("pathway_class.csv",check.names = F)
library(ggplot2)
library(grid)
library(tidyverse)
path <- arrange(path,ratio)
path$class_name <- factor(path$class_name)
color <- c("#F4A29A","gray70") 
ggplot(path,aes(x=ratio,y=reorder(class_name,-ratio))) +
  labs(x="Ratio",y="") + labs(title="") +
  geom_point(aes(size=count,color=count)) +
  scale_color_gradient(low = color[2],high=color[1]) + 
  scale_size_continuous(range=c(0.3,2)) +  
  theme_bw() +
  theme(legend.position = "none") +
  theme(panel.grid = element_blank())


###Figure6B.heatmap
data <- read.csv("pathway_interaction_variance.csv",check.names = F)
library(reshape2)
data <- dcast(data,path~name)
data[is.na(data)] <- "0"
library(ComplexHeatmap)
library(circlize)
col1=colorRampPalette(c("white","#F7C2CD","#F4A29A","darkred"))(n = 10)  
Heatmap(data,
        col1,
        "association", 
        show_heatmap_legend = F,
        row_names_side = "left",
        border = T, 
        cluster_rows = F,  
        cluster_columns = T,
        border_gp = gpar(col = "gray20",lwd = 1), 
        rect_gp = gpar(col ="white",lwd = 1), 
        row_names_gp = gpar(fontsize = 3), 
        column_names_gp = gpar(fontsize = 3)
)

###################### thanks ########################
